<Window x:Class="DMXForGamers.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DMXForGamers"
        xmlns:views="clr-namespace:DMXForGamers.Views"
        xmlns:monitors="clr-namespace:DMXForGamers.Views.Monitors"
        xmlns:common="clr-namespace:DMXForGamers.Views.Common"
        xmlns:tk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:tkpg="clr-namespace:Xceed.Wpf.Toolkit.PropertyGrid;assembly=Xceed.Wpf.Toolkit"
        xmlns:spark="clr-namespace:WPFSpark;assembly=WPFSpark"
        xmlns:converters="clr-namespace:DMXForGamers.Converters"
        mc:Ignorable="d"
        Title="DMX For Gamers" Height="600" Width="800" Icon="DMXForGamers.ico" Closed="Window_Closed" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views\ControlStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:ListToStringConverter x:Key="listToStringConverter" />
            <converters:InvertBooleanConverter x:Key="invertBoolConverter" />
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.ColumnSpan="5" Foreground="Purple" Margin="0,0,0,5" Grid.RowSpan="2">Step 1: Select How DMX Events will be Triggered</TextBlock>
            <Button Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="3" FontSize="12" Command="{Binding Path='Help'}" ToolTip="Help" Style="{StaticResource ResourceKey=LinkButton}">Help</Button>
            <TabControl Grid.Row="2" Grid.ColumnSpan="8" SelectedIndex="{Binding Path=SelectedMonitorIndex}">
                <TabItem Header="New Process Monitor">
                    <StackPanel>
                        <TextBlock Foreground="Blue">Trigger events from standard output (stdout) of an application...</TextBlock>
                        <monitors:NewProcessMonitor DataContext="{Binding Path=NewProcessMonitor}"></monitors:NewProcessMonitor>
                    </StackPanel>
                </TabItem>
                <TabItem Header="File Monitor">
                    <StackPanel>
                        <TextBlock Foreground="Blue">Trigger events from text file...</TextBlock>
                        <monitors:FileMonitor DataContext="{Binding Path=FileMonitor}"></monitors:FileMonitor>
                    </StackPanel>
                </TabItem>
                <TabItem Header="No Monitor">
                    <TextBlock Foreground="Blue">Manual triggering of events only...</TextBlock>
                </TabItem>
            </TabControl>
            <TextBlock Grid.Row="4" Grid.ColumnSpan="5" Foreground="Purple">Step 2: Define DMX Events and Resulting DMX Outputs</TextBlock>
            <TextBlock Grid.Row="6">Events File:</TextBlock>
            <common:DocTextBox Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="5"
                               EditCommand="{Binding Path='EditEvents'}" NewCommand="{Binding Path='NewEvents'}"
                               FilePath="{Binding Path=EventsFile}" Filter="Events File|*.dge|XML File|*.xml|All Files|*.*"></common:DocTextBox>
            <TextBlock Grid.Row="8">DMX File:</TextBlock>
            <common:DocTextBox Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="5"
                               EditCommand="{Binding Path='EditDMXEvents'}" NewCommand="{Binding Path='NewDMXEvents'}"
                               FilePath="{Binding Path=DMXFile}" Filter="DMX File|*.dgd|XML File|*.xml|All Files|*.*"></common:DocTextBox>
            <TextBlock Grid.Row="10" Grid.ColumnSpan="5" Foreground="Purple" Margin="0,0,0,5" Grid.RowSpan="2">Step 3: Select and Configure a DMX Adapter/Protocol and Options</TextBlock>
            <TextBlock Grid.Row="12">Protocol:</TextBlock>
            <ComboBox Grid.Row="12" Grid.Column="2" Grid.ColumnSpan="3" ItemsSource="{Binding Path=Protocols}" DisplayMemberPath="Description" SelectedItem="{Binding Path=SelectedProtocol}"></ComboBox>
            <Button Grid.Row="12" Grid.Column="6" Command="{Binding Path='EditSettings'}" ToolTip="Protocol Settings">
                <Image Source="/DMXForGamers;component/Images/Gear16.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Button>
            <Grid Grid.Row="14" Grid.Column="2" Grid.ColumnSpan="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0" IsChecked="{Binding Path=EnabledRemote}">Enable Web Remote Control</CheckBox>
                <Label Grid.Column="2" IsEnabled="{Binding Path=EnabledRemote}" Padding="5,0">Remote Port:</Label>
                <tk:IntegerUpDown Grid.Column="4" Value="{Binding Path=RemotePort}" Width="75" Minimum="0" Maximum="65535" IsEnabled="{Binding Path=EnabledRemote}"/>
                <Button Grid.Column="6" Grid.ColumnSpan="3" FontSize="12" Command="{Binding Path='Help'}" CommandParameter="1" Style="{StaticResource ResourceKey=LinkButton}">What is this?</Button>
            </Grid>
            <TextBlock Grid.Row="16" Grid.ColumnSpan="5" Foreground="Purple">Step 4: Run it!</TextBlock>
            <TabControl Grid.Row="18" Grid.ColumnSpan="8">
                <TabItem Header="Main Control">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Click="StartButton_Click" IsEnabled="{Binding Path=CanRun}" Padding="10,0" FontSize="18">Start</Button>
                        <TextBlock Grid.Row="0" Grid.Column="1" TextAlignment="Center" Text="{Binding Path=RunningText}" Visibility="{Binding Path=IsRunning, Converter={StaticResource booleanToVisibilityConverter}}" />
                        <spark:FluidProgressBar Grid.Row="1" Grid.Column="1" Visibility="{Binding Path=IsRunning, Converter={StaticResource booleanToVisibilityConverter}}" Margin="5" Oscillate="True" />
                        <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Click="StopButton_Click" IsEnabled="{Binding Path=IsRunning}" Padding="10,0" FontSize="18">Stop</Button>
                        <ScrollViewer Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="m_OutputScroll">
                            <TextBlock Text="{Binding Path=Output, Converter={StaticResource listToStringConverter}}"></TextBlock>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Manual Triggering" IsEnabled="{Binding Path=IsRunning}">
                    <Grid>
                        <views:ManualEvents></views:ManualEvents>
                    </Grid>
                </TabItem>
            </TabControl>
            <Border Grid.Row="20" Grid.ColumnSpan="8" BorderThickness="1" BorderBrush="Black">
                <Expander Header='DMX Channels Visualizer'>
                    <ItemsControl ItemsSource="{Binding Path=Channels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <common:Bar MaxValue="255" Value="{Binding Path=Value}" Height="20" Width="10"
                                        BorderThickness="0.2" BorderBrush="Gray">
                                    <common:Bar.BarColor>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="GreenYellow" Offset="0.0" />
                                            <GradientStop Color="LightGreen" Offset="0.25" />
                                            <GradientStop Color="Green" Offset="0.75" />
                                            <GradientStop Color="LimeGreen" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </common:Bar.BarColor>
                                    <common:Bar.ToolTip>
                                        <ToolTip Content="{Binding Path=Channel}" ContentStringFormat="{}Channel #{0}" />
                                    </common:Bar.ToolTip>
                                </common:Bar>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </Expander>
            </Border>
        </Grid>
        <Grid Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <tk:BusyIndicator Grid.Column="1" Grid.Row="1" IsBusy="{Binding Path=IsBusy}"/>
        </Grid>
    </Grid>
</Window>
